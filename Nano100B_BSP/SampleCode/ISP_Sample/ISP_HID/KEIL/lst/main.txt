; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --feedback=.\obj\NANO100B_ISP_HID_flag.fed --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I.\ -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\..\..\Library\StdDriver\inc -Id:\Keil_v5\ARM\RV31\INC -Id:\Keil_v5\ARM\CMSIS\Include -Id:\Keil_v5\ARM\INC\?ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=526 --omf_browse=.\obj\main.crf ..\main.c]
                          THUMB

                          AREA ||i.SYS_Init||, CODE, READONLY, ALIGN=2

                  SYS_Init PROC
;;;19     /*--------------------------------------------------------------------------*/
;;;20     void SYS_Init(void)
000000  4812              LDR      r0,|L1.76|
;;;21     {
;;;22         /* Enable external 12MHz HXT */
;;;23         CLK->PWRCTL |= (CLK_PWRCTL_HIRC_EN_Msk);
000002  6801              LDR      r1,[r0,#0]
000004  2204              MOVS     r2,#4
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;24     	
;;;25         /* 12MHz HXT ==> 96MHz Pll Colck Output */
;;;26         CLK->PLLCTL = 0x20220;
00000a  4911              LDR      r1,|L1.80|
00000c  6241              STR      r1,[r0,#0x24]
;;;27     	
;;;28     	    /* Waiting for clock ready */
;;;29         while ((!(CLK->CLKSTATUS & (CLK_CLKSTATUS_HIRC_STB_Msk | CLK_CLKSTATUS_PLL_STB_Msk))));
00000e  2114              MOVS     r1,#0x14
                  |L1.16|
000010  68c2              LDR      r2,[r0,#0xc]
000012  420a              TST      r2,r1
000014  d0fc              BEQ      |L1.16|
;;;30     	
;;;31         CLK->CLKDIV0 = (CLK->CLKDIV0 & ~CLK_CLKDIV0_HCLK_N_Msk) | CLK_HCLK_CLK_DIVIDER(3);
000016  69c1              LDR      r1,[r0,#0x1c]
000018  0909              LSRS     r1,r1,#4
00001a  0109              LSLS     r1,r1,#4
00001c  1c89              ADDS     r1,r1,#2
00001e  61c1              STR      r1,[r0,#0x1c]
;;;32         CLK->CLKSEL0 = (CLK->CLKSEL0 & ~CLK_CLKSEL0_HCLK_S_Msk) | CLK_CLKSEL0_HCLK_S_PLL;
000020  6901              LDR      r1,[r0,#0x10]
000022  08c9              LSRS     r1,r1,#3
000024  00c9              LSLS     r1,r1,#3
000026  1c89              ADDS     r1,r1,#2
000028  6101              STR      r1,[r0,#0x10]
;;;33     
;;;34         SystemCoreClock = 32000000;     // HCLK
00002a  4a0b              LDR      r2,|L1.88|
00002c  4909              LDR      r1,|L1.84|
;;;35         CyclesPerUs     = 32;
00002e  6011              STR      r1,[r2,#0]  ; SystemCoreClock
000030  4a0a              LDR      r2,|L1.92|
000032  2120              MOVS     r1,#0x20
;;;36         /* Select IP clock source */
;;;37         CLK->CLKDIV0 = (CLK->CLKDIV0 & ~CLK_CLKDIV0_USB_N_Msk) | CLK_USB_CLK_DIVIDER(2);
000034  6011              STR      r1,[r2,#0]  ; CyclesPerUs
000036  69c1              LDR      r1,[r0,#0x1c]
000038  22f0              MOVS     r2,#0xf0
00003a  4391              BICS     r1,r1,r2
00003c  3110              ADDS     r1,r1,#0x10
00003e  61c1              STR      r1,[r0,#0x1c]
;;;38         /* Enable IP clock */
;;;39         CLK->APBCLK |= CLK_APBCLK_USBD_EN;
000040  6881              LDR      r1,[r0,#8]
000042  2201              MOVS     r2,#1
000044  06d2              LSLS     r2,r2,#27
000046  4311              ORRS     r1,r1,r2
000048  6081              STR      r1,[r0,#8]
;;;40     }
00004a  4770              BX       lr
;;;41     
                          ENDP

                  |L1.76|
                          DCD      0x50000200
                  |L1.80|
                          DCD      0x00020220
                  |L1.84|
                          DCD      0x01e84800
                  |L1.88|
                          DCD      SystemCoreClock
                  |L1.92|
                          DCD      CyclesPerUs

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;44     /*---------------------------------------------------------------------------------------------------------*/
;;;45     int32_t main(void)
000000  b508              PUSH     {r3,lr}
000002  2259              MOVS     r2,#0x59
000004  2116              MOVS     r1,#0x16
000006  4836              LDR      r0,|L2.224|
000008  2388              MOVS     r3,#0x88
;;;46     {
00000a  e002              B        |L2.18|
                  |L2.12|
00000c  6002              STR      r2,[r0,#0]
00000e  6001              STR      r1,[r0,#0]
000010  6003              STR      r3,[r0,#0]
                  |L2.18|
000012  6804              LDR      r4,[r0,#0]
000014  2c01              CMP      r4,#1
000016  d1f9              BNE      |L2.12|
;;;47     	unsigned int Download_Flags;
;;;48         /* Unlock write-protected registers */
;;;49         SYS_UnlockReg();
;;;50         WDT->CTL &= ~(WDT_CTL_WTE_Msk);
000018  4c32              LDR      r4,|L2.228|
00001a  6820              LDR      r0,[r4,#0]
00001c  2608              MOVS     r6,#8
00001e  43b0              BICS     r0,r0,r6
000020  6020              STR      r0,[r4,#0]
;;;51         WDT->CTL |= (WDT_TIMEOUT_2POW18 | WDT_CTL_WTR_Msk);
000022  6820              LDR      r0,[r4,#0]
000024  2171              MOVS     r1,#0x71
000026  4308              ORRS     r0,r0,r1
000028  6020              STR      r0,[r4,#0]
;;;52         SYS_Init();
00002a  f7fffffe          BL       SYS_Init
;;;53         CLK->AHBCLK |= CLK_AHBCLK_ISP_EN_Msk;
00002e  482e              LDR      r0,|L2.232|
000030  6841              LDR      r1,[r0,#4]
000032  2204              MOVS     r2,#4
000034  4311              ORRS     r1,r1,r2
000036  6041              STR      r1,[r0,#4]
;;;54         FMC->ISPCON |= FMC_ISPCON_ISPEN_Msk;
000038  4d2c              LDR      r5,|L2.236|
00003a  6828              LDR      r0,[r5,#0]
00003c  2101              MOVS     r1,#1
00003e  4308              ORRS     r0,r0,r1
000040  6028              STR      r0,[r5,#0]
;;;55         g_apromSize = GetApromSize();
000042  f7fffffe          BL       GetApromSize
000046  492a              LDR      r1,|L2.240|
;;;56         GetDataFlashInfo(&g_dataFlashAddr, &g_dataFlashSize);
000048  6008              STR      r0,[r1,#0]  ; g_apromSize
00004a  492a              LDR      r1,|L2.244|
00004c  482a              LDR      r0,|L2.248|
00004e  f7fffffe          BL       GetDataFlashInfo
;;;57     
;;;58     	FMC_Read_User(DATA_FLASH_VER_BASE + 24,&Download_Flags);
000052  4669              MOV      r1,sp
000054  4829              LDR      r0,|L2.252|
000056  f7fffffe          BL       FMC_Read_User
;;;59     	
;;;60     	//printf("f = %d \n",Download_Flags);
;;;61     	if(1 == Download_Flags) {
00005a  9800              LDR      r0,[sp,#0]
00005c  2700              MOVS     r7,#0
00005e  2801              CMP      r0,#1
000060  d016              BEQ      |L2.144|
;;;62         //if (DetectPin == 0) {
;;;63             USBD_Open(&gsInfo, HID_ClassRequest, NULL);
;;;64             /* Endpoint configuration */
;;;65             HID_Init();
;;;66             NVIC_EnableIRQ(USBD_IRQn);
;;;67             USBD_Start();
;;;68     
;;;69     		while (1 == Download_Flags) {
;;;70             //while (DetectPin == 0) {
;;;71                 if (bUsbDataReady == TRUE) {
;;;72                     WDT->CTL &= ~(WDT_CTL_WTE_Msk);
;;;73                     WDT->CTL |= (WDT_TIMEOUT_2POW18 | WDT_CTL_WTR_Msk);
;;;74                     ParseCmd((uint8_t *)usb_rcvbuf, EP3_MAX_PKT_SIZE);
;;;75                     EP2_Handler();
;;;76                     bUsbDataReady = FALSE;
;;;77                 }
;;;78             }
;;;79         } else {
;;;80             SysTick->LOAD = 300000 * CyclesPerUs;
000062  4827              LDR      r0,|L2.256|
000064  6801              LDR      r1,[r0,#0]  ; CyclesPerUs
000066  4827              LDR      r0,|L2.260|
000068  4341              MULS     r1,r0,r1
00006a  4827              LDR      r0,|L2.264|
00006c  6141              STR      r1,[r0,#0x14]
;;;81             SysTick->VAL  = (0x00);
00006e  6187              STR      r7,[r0,#0x18]
;;;82             SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
000070  2105              MOVS     r1,#5
000072  6101              STR      r1,[r0,#0x10]
                  |L2.116|
;;;83     
;;;84             /* Waiting for down-count to zero */
;;;85             while ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == 0);
000074  6901              LDR      r1,[r0,#0x10]
000076  03c9              LSLS     r1,r1,#15
000078  d5fc              BPL      |L2.116|
                  |L2.122|
;;;86         }
;;;87     
;;;88         outpw(&SYS->RST_SRC, 3);//clear bit
00007a  2103              MOVS     r1,#3
00007c  2005              MOVS     r0,#5
00007e  0700              LSLS     r0,r0,#28
000080  6041              STR      r1,[r0,#4]
;;;89         outpw(&FMC->ISPCON, inpw(&FMC->ISPCON) & 0xFFFFFFFC);
000082  6828              LDR      r0,[r5,#0]
000084  4388              BICS     r0,r0,r1
000086  6028              STR      r0,[r5,#0]
;;;90         outpw(&SCB->AIRCR, (V6M_AIRCR_VECTKEY_DATA | V6M_AIRCR_SYSRESETREQ));
000088  4921              LDR      r1,|L2.272|
00008a  4820              LDR      r0,|L2.268|
00008c  60c8              STR      r0,[r1,#0xc]
                  |L2.142|
;;;91     
;;;92         /* Trap the CPU */
;;;93         while (1);
00008e  e7fe              B        |L2.142|
                  |L2.144|
000090  2200              MOVS     r2,#0                 ;63
000092  4920              LDR      r1,|L2.276|
000094  4820              LDR      r0,|L2.280|
000096  f7fffffe          BL       USBD_Open
00009a  f7fffffe          BL       HID_Init
00009e  2001              MOVS     r0,#1                 ;65
0000a0  491e              LDR      r1,|L2.284|
0000a2  05c0              LSLS     r0,r0,#23             ;65
0000a4  6008              STR      r0,[r1,#0]            ;65
0000a6  f7fffffe          BL       USBD_Start
0000aa  481d              LDR      r0,|L2.288|
0000ac  4627              MOV      r7,r4                 ;50
0000ae  2671              MOVS     r6,#0x71              ;51
0000b0  4604              MOV      r4,r0                 ;71
0000b2  e011              B        |L2.216|
                  |L2.180|
0000b4  7820              LDRB     r0,[r4,#0]            ;71  ; bUsbDataReady
0000b6  2801              CMP      r0,#1                 ;71
0000b8  d10e              BNE      |L2.216|
0000ba  6838              LDR      r0,[r7,#0]            ;72
0000bc  2108              MOVS     r1,#8                 ;72
0000be  4388              BICS     r0,r0,r1              ;72
0000c0  6038              STR      r0,[r7,#0]            ;72
0000c2  6838              LDR      r0,[r7,#0]            ;73
0000c4  4330              ORRS     r0,r0,r6              ;73
0000c6  6038              STR      r0,[r7,#0]            ;73
0000c8  2140              MOVS     r1,#0x40              ;74
0000ca  4816              LDR      r0,|L2.292|
0000cc  f7fffffe          BL       ParseCmd
0000d0  f7fffffe          BL       EP2_Handler
0000d4  2000              MOVS     r0,#0                 ;76
0000d6  7020              STRB     r0,[r4,#0]            ;76
                  |L2.216|
0000d8  9800              LDR      r0,[sp,#0]            ;69
0000da  2801              CMP      r0,#1                 ;69
0000dc  d0ea              BEQ      |L2.180|
0000de  e7cc              B        |L2.122|
;;;94     }
;;;95     /*** (C) COPYRIGHT 2013 Nuvoton Technology Corp. ***/
                          ENDP

                  |L2.224|
                          DCD      0x50000100
                  |L2.228|
                          DCD      0x40004000
                  |L2.232|
                          DCD      0x50000200
                  |L2.236|
                          DCD      0x5000c000
                  |L2.240|
                          DCD      g_apromSize
                  |L2.244|
                          DCD      g_dataFlashSize
                  |L2.248|
                          DCD      g_dataFlashAddr
                  |L2.252|
                          DCD      0x0000fe18
                  |L2.256|
                          DCD      CyclesPerUs
                  |L2.260|
                          DCD      0x000493e0
                  |L2.264|
                          DCD      0xe000e000
                  |L2.268|
                          DCD      0x05fa0004
                  |L2.272|
                          DCD      0xe000ed00
                  |L2.276|
                          DCD      HID_ClassRequest
                  |L2.280|
                          DCD      gsInfo
                  |L2.284|
                          DCD      0xe000e100
                  |L2.288|
                          DCD      bUsbDataReady
                  |L2.292|
                          DCD      usb_rcvbuf

;*** Start embedded assembler ***

#line 1 "..\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_SYS_Init____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_SYS_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_SYS_Init____REVSH|
#line 402
|__asm___6_main_c_SYS_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
